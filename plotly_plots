#Plots
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from plotly.offline import init_notebook_mode, iplot
import plotly.figure_factory as ff
import cufflinks
cufflinks.go_offline()
cufflinks.set_config_file(world_readable=True, theme='pearl')
import plotly.graph_objs as go
init_notebook_mode(connected=True)
pd.set_option('display.max_columns', 100)



# Histogram
def histogram_plot(dataframe,feature):
    
    return dataframe[feature].iplot(
    kind='hist',
    bins=100,
    xTitle='feature',
    linecolor='black',
    yTitle='count',
    title='Histogram of '+feature)
#Box plots
def box_plot(dataframe,feature):
    return dataframe[feature].iplot(kind='box', title='Box plot of '+feature)
    
    
#pie chart
def plot_piechart(df,feature,title):
    """
    Pie chart plot
    Parameters
    ------
    df: pd.DataFrame
        dataframe
    feature: str
        name of the feature
    title: str
        title of the pie chart
    ------
    plotly image: plotly image
        plotly image
    """
    import plotly.graph_objs as go
    import plotly.offline as py
    trace = go.Pie(labels = df[feature].value_counts().keys().tolist(),
               values = df[feature].value_counts().values.tolist(),
               marker = dict(colors = ['royalblue','lime'],
                             line = dict(color = "white", width =  1.3)
                            ),
               rotation = 90,
               hoverinfo = "label+value+text",
               hole = .5
              )
    layout = go.Layout(dict(title = title,
                            plot_bgcolor = "rgb(243,243,243)",
                            paper_bgcolor = "rgb(243,243,243)",
                           )
                      )
    data = [trace]
    fig = go.Figure(data = data, layout = layout)
    return py.iplot(fig)
    
    
# Wordcloud
def plot_wordcloud(df,feature):
    """
    Word cloud plot
    Parameters
    ------
    df: pd.DataFrame
        dataframe
    feature: str
        feature
    Returns
    ------
    plt: matplotlib image
        matplotlib image
    """
    import matplotlib.pyplot as plt
    from wordcloud import WordCloud
    plt.subplots(figsize = (20,10))
    wordcloud = WordCloud (
                        background_color = 'white',
                        width = 512,
                        height = 384
                            ).generate(' '.join(df[feature]))
    plt.imshow(wordcloud) # image show
    plt.axis('off') # to off the axis of x and y
    plt.savefig('Plotly-World_Cloud.png')
    return plt.show()
